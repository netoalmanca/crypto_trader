# Generated by Django 4.2.21 on 2025-06-04 00:47

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cryptocurrency',
            fields=[
                ('symbol', models.CharField(help_text='Símbolo da criptomoeda (ex: BTC, ETH)', max_length=20, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(help_text='Nome completo da criptomoeda (ex: Bitcoin)', max_length=100)),
                ('logo_url', models.URLField(blank=True, help_text='URL do logo da criptomoeda', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Criptomoeda',
                'verbose_name_plural': 'Criptomoedas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('binance_api_key', models.CharField(blank=True, help_text='Chave da API da Binance do usuário (opcional)', max_length=255, null=True)),
                ('binance_api_secret', models.CharField(blank=True, help_text='Segredo da API da Binance do usuário (opcional)', max_length=255, null=True)),
                ('preferred_fiat_currency', models.CharField(choices=[('USD', 'Dólar Americano'), ('BRL', 'Real Brasileiro'), ('EUR', 'Euro')], default='BRL', help_text='Moeda fiduciária preferida do usuário para exibição de valores', max_length=5)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Usuário',
                'verbose_name_plural': 'Perfis de Usuários',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('BUY', 'Compra'), ('SELL', 'Venda'), ('DEPOSIT', 'Depósito'), ('WITHDRAWAL', 'Retirada')], help_text='Tipo da transação', max_length=10)),
                ('quantity_crypto', models.DecimalField(decimal_places=18, help_text='Quantidade da criptomoeda transacionada', max_digits=28)),
                ('price_per_unit_fiat', models.DecimalField(blank=True, decimal_places=2, help_text='Preço por unidade da cripto na moeda fiduciária da transação (para Compra/Venda)', max_digits=20, null=True)),
                ('total_value_fiat', models.DecimalField(blank=True, decimal_places=2, help_text='Valor total da transação em moeda fiduciária (calculado para Compra/Venda)', max_digits=20, null=True)),
                ('fees_fiat', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Taxas da transação em moeda fiduciária', max_digits=20)),
                ('transaction_currency', models.CharField(blank=True, choices=[('USD', 'Dólar Americano'), ('BRL', 'Real Brasileiro'), ('EUR', 'Euro')], help_text='Moeda fiduciária utilizada nesta transação específica', max_length=5, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Data e hora da transação')),
                ('binance_order_id', models.CharField(blank=True, help_text='ID da ordem na Binance (se aplicável)', max_length=255, null=True)),
                ('notes', models.TextField(blank=True, help_text='Notas adicionais sobre a transação', null=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='core.cryptocurrency')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='core.userprofile')),
            ],
            options={
                'verbose_name': 'Transação',
                'verbose_name_plural': 'Transações',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Holding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=18, default=Decimal('0.0'), help_text='Quantidade da criptomoeda possuída', max_digits=28)),
                ('average_buy_price_fiat', models.DecimalField(blank=True, decimal_places=2, help_text='Preço médio de compra na moeda fiduciária preferida do usuário', max_digits=20, null=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='held_by_users', to='core.cryptocurrency')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holdings', to='core.userprofile')),
            ],
            options={
                'verbose_name': 'Posse de Cripto',
                'verbose_name_plural': 'Posses de Criptos',
                'ordering': ['user_profile', 'cryptocurrency__name'],
                'unique_together': {('user_profile', 'cryptocurrency')},
            },
        ),
    ]

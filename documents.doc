Visão Geral do Projeto: Crypto Trader Pro
1. Introdução
O Crypto Trader Pro é uma plataforma de software completa, desenvolvida em Django, que evoluiu de um painel de controlo manual para um sofisticado sistema de trading de criptomoedas assistido por Inteligência Artificial. O seu core integra-se diretamente com a API da Binance para execução de ordens e recolha de dados de mercado em tempo real, enquanto utiliza a API do Google Gemini como o cérebro estratégico para análise de mercado, geração de sinais e otimização de estratégias.

O objetivo do projeto é fornecer aos utilizadores uma ferramenta robusta que não só permite o controlo total sobre o seu portfólio, mas também oferece uma vantagem competitiva através da automação inteligente e adaptativa.

2. Arquitetura e Tecnologias
Backend: Django 5.x, Python 3.10+, Gunicorn/Uvicorn

Frontend: Templates Django, Tailwind CSS, JavaScript, Chart.js, Alpine.js

Base de Dados: SQLite 3 (Desenvolvimento), PostgreSQL (Produção)

Tarefas Assíncronas: Celery e Redis

APIs Externas: Binance, Google Gemini, NewsAPI

Segurança: Criptografia de chaves via cryptography (Fernet + PBKDF2HMAC)

3. Estrutura de Módulos (Aplicações Django)
O projeto está organizado em duas aplicações principais para garantir a separação de responsabilidades: core e trading_agent.

4. Fluxo de Decisão e Aprendizagem Adaptativa do Agente de IA
O agente opera num ciclo contínuo e auto-otimizável.

Recolha de Dados (a cada 4 horas): Tarefas Celery recolhem indicadores técnicos e analisam o sentimento de notícias reais.

Ciclo de Decisão (a cada hora):

A tarefa run_trading_cycle_for_all_users recolhe o contexto histórico dos dados.

(FINAL) Prompt Adaptativo: O prompt enviado ao Gemini agora inclui uma secção de "Modificações de Estratégia Ativas", que é preenchida com as sugestões que o utilizador escolheu aplicar a partir do StrategyLog. Isto permite que a estratégia base da IA seja personalizada e evolua com o tempo.

A resposta da IA é guardada como um TradingSignal.

Ciclo de Execução (a cada hora, 5 mins após decisão): Sinais de alta confiança são executados.

Ciclo de Aprendizagem (Semanalmente):

A tarefa reflect_on_performance analisa os trades da última semana.

A IA gera uma reflexão e sugestões de melhoria, que são guardadas num StrategyLog.

(NOVO) Ciclo de Aplicação (Controlado pelo Utilizador):

Uma nova página, "Gestor de Estratégia", permite ao utilizador visualizar todos os StrategyLogs.

O utilizador pode ler a análise da IA e, com um botão "Aplicar Sugestão", pode fazer com que as modificações sugeridas se tornem a nova regra ativa para o seu agente, fechando o ciclo de feedback.

5. Funcionalidades Implementadas
Gestão de Conta e Segurança Completa.

Dashboard e Análise de Portfólio Detalhada.

Trading Manual (Mercado e Limite).

Módulo do Agente de IA:

Controlo Total (Ativar/Desativar, parâmetros de risco).

Análise de Sentimento e Técnica com Contexto Histórico.

Ciclo de Aprendizagem Semanal com autoavaliação.

(NOVO) Gestor de Estratégia: Interface para o utilizador aplicar os aprendizados da IA, criando um agente verdadeiramente adaptativo e personalizado.

Dashboard do Agente, Relatórios de Performance e Ferramenta de Backtesting.

6. Evolução Futura
O projeto atingiu um estado de maturidade com um ciclo de feedback completo. Os próximos passos concentram-se na expansão e refinamento:

Expandir Fontes de Dados: Integrar dados on-chain ou de sentimento de redes sociais.

Backtesting Comparativo: Permitir ao utilizador simular o desempenho de diferentes versões da estratégia salvas no StrategyLog.

Suporte a Mais Ativos: Expandir a lógica do agente para operar com outros criptoativos além do BTC.